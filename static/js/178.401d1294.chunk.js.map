{"version":3,"file":"static/js/178.401d1294.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/SearchWithAutocomplite/Search.module.css?9dd6","../node_modules/antd/es/auto-complete/index.js","components/common/SearchWithAutocomplite/SearchAutoComplite.tsx","webpack://samurai-way/./src/components/Dialogs/FriendsList/FriendsList.module.css?0a8f","components/Dialogs/FriendsList/FriendsList.tsx","webpack://samurai-way/./src/components/Dialogs/DialogLastMessege/Messege/Message.module.css?8459","components/Dialogs/DialogLastMessege/Messege/Messege.tsx","components/Dialogs/DialogLastMessege/DialogLastMessage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"autoComlete\":\"Search_autoComlete__Kdx4p\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/**\n * TODO: 4.0\n *\n * - Remove `dataSource`\n * - `size` not work with customizeInput\n * - CustomizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport Select from '../select';\nimport genPurePanel from '../_util/PurePanel';\nimport { isValidElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nvar Option = Select.Option;\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    popupClassName = props.popupClassName,\n    dropdownClassName = props.dropdownClassName,\n    children = props.children,\n    dataSource = props.dataSource;\n  var childNodes = toArray(children);\n  // ============================= Input =============================\n  var customizeInput;\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n    customizeInput = _childNodes[0];\n  }\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined;\n  // ============================ Options ============================\n  var optionChildren;\n  // [Legacy] convert `children` or `dataSource` into option children\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n        default:\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'AutoComplete', '`dataSource` is only supports type `string[] | Object[]`.') : void 0;\n          return undefined;\n      }\n    }) : [];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!dropdownClassName, 'AutoComplete', '`dropdownClassName` is deprecated, please use `popupClassName` instead.') : void 0;\n  }\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(Select, _extends({\n      ref: ref\n    }, omit(props, ['dataSource', 'dropdownClassName']), {\n      prefixCls: prefixCls,\n      popupClassName: popupClassName || dropdownClassName,\n      className: classNames(prefixCls + \"-auto-complete\", className),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE\n    }, {\n      // Internal api\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\n// We don't care debug panel\n/* istanbul ignore next */\nvar PurePanel = genPurePanel(RefAutoComplete);\nRefAutoComplete.Option = Option;\nRefAutoComplete._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default RefAutoComplete;","import React from 'react';\r\nimport s from './Search.module.css';\r\nimport {AutoComplete, Input, Row, SelectProps} from 'antd';\r\nimport {UsersDataType} from \"../../../Redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport sCommentForm from \"../../Profile/MyPosts/CommentForm/CommentForm.module.css\";\r\nimport {viewAvatar} from \"../../../utils/ViewAvatar/viewAvatar\";\r\n\r\ntype SearchPropsType = {\r\n    data: UsersDataType[]\r\n    addTochedUser?: (data: { id: number, name: string }) => void\r\n    placeholder:string\r\n    getSearchUsers?:(term:string)=>void\r\n}\r\nexport const SearchAutoComplite: React.FC<SearchPropsType> = ({data, addTochedUser,placeholder,getSearchUsers}) => {\r\n\r\n    const [options, setOptions] = React.useState<SelectProps<object>['options']>([]);\r\n\r\n    const searchResult = (text: string) => {\r\n        const result = data.filter((f) => f.name.toLowerCase().includes(text))\r\n\r\n        return result.map(r => {\r\n            const addTochedUserHandler = () => {\r\n                addTochedUser && addTochedUser({id: r.id, name: r.name})\r\n            }\r\n            const avatar = viewAvatar(r.photos.small)\r\n            return ({\r\n                value: r.name,\r\n                label: <NavLink style={{color: \"black\"}} onClick={addTochedUserHandler} to={'/dialog/' + r.id}\r\n                                key={r.id}>\r\n                    <Row align={\"middle\"}>\r\n                        <img className={sCommentForm.avatar} src={avatar} alt=\"avatar\"/> <span\r\n                        style={{paddingLeft: 5}}> {r.name}</span>\r\n                    </Row>\r\n                </NavLink>\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSearch =  (value: string) => {\r\n\r\n         setOptions(value ? searchResult(value) : []);\r\n    };\r\n    const onSelect = (value: string) => {\r\n        getSearchUsers && getSearchUsers(value)\r\n    };\r\n\r\n    return (\r\n\r\n\r\n            <AutoComplete\r\n                options={options}\r\n                className={s.autoComlete}\r\n                onSearch={handleSearch}\r\n                onSelect={onSelect}\r\n            >\r\n                <Input.Search  placeholder={placeholder} enterButton/>\r\n            </AutoComplete>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"nextPrev\":\"FriendsList_nextPrev__-F7Zf\"};","import {Col, Row} from \"antd\";\r\nimport {LeftOutlined, RightOutlined} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport SingleUser from \"../../common/SingleUser/SingleUser\";\r\nimport {UsersDataType} from \"../../../Redux/users-reducer\";\r\nimport s from './FriendsList.module.css'\r\nimport {viewAvatar} from \"../../../utils/ViewAvatar/viewAvatar\";\r\nimport {routes} from \"../../../Routes/Routes\";\r\n\r\ntype FriendsListType = {\r\n    friends: UsersDataType[]\r\n    addTochedUser: (data: { id: number, name: string }) => void\r\n    followingInProgress:number[]\r\n    changeFollowUnfollow:(user:UsersDataType)=>void\r\n    isOwner:boolean\r\n\r\n}\r\nexport const FriendsList: React.FC<FriendsListType> = ({friends,addTochedUser,\r\n                                                           changeFollowUnfollow,followingInProgress,isOwner}) => {\r\n    const standartPortion = 7\r\n    const [sizePortion, setSizePortion] = React.useState(standartPortion)\r\n    const [prevSizePortion, setPrevSizePortion] = React.useState(0)\r\n\r\n    const friendPortion = friends.slice(prevSizePortion, sizePortion)\r\n\r\n    const totalCountFriends = friends.length\r\n\r\n    const showNextFriendsButton = totalCountFriends / sizePortion > 1\r\n    const showPrevFriendsButton = prevSizePortion !== 0\r\n\r\n    const prevPortion = () => {\r\n        setPrevSizePortion(prevSizePortion - standartPortion)\r\n        setSizePortion(sizePortion - standartPortion)\r\n    }\r\n    const nextPortion = () => {\r\n        setSizePortion(sizePortion + standartPortion)\r\n        setPrevSizePortion(prevSizePortion + standartPortion)\r\n    }\r\n    const friendsData = friendPortion.map((f) => {\r\n        const avatar = viewAvatar(f.photos.small)\r\n        return <SingleUser key={f.id} addTochedUser={addTochedUser} followingInProgress={followingInProgress}\r\n                       unfriend={changeFollowUnfollow} isOwner={isOwner}\r\n                           navigate={routes.toDialog} user={f} photo={avatar}/>\r\n    })\r\n\r\n    return (\r\n        <Row align={\"middle\"}>\r\n            <Col span={1}>\r\n                {showPrevFriendsButton && <LeftOutlined\r\n                    className={s.nextPrev} style={{fontSize: 20}} onClick={prevPortion}/>}\r\n            </Col>\r\n            <Col span={22}>\r\n                <Row justify={\"space-evenly\"}> {friendsData}</Row>\r\n            </Col>\r\n            <Col span={1}>\r\n                {showNextFriendsButton && <RightOutlined\r\n                    className={s.nextPrev} onClick={nextPortion} style={{fontSize: 20}}/>}\r\n            </Col>\r\n        </Row>);\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messageContainer\":\"Message_messageContainer__8c4PQ\",\"messege\":\"Message_messege__C9nb2\"};","import React, {forwardRef} from 'react';\r\nimport {Col, Divider, Row} from \"antd\";\r\nimport styleMyPosts from \"../../../Profile/MyPosts/MyPosts.module.css\";\r\nimport sCommentForm from \"../../../Profile/MyPosts/CommentForm/CommentForm.module.css\";\r\nimport {UsersDataType} from \"../../../../Redux/users-reducer\";\r\nimport s from \"./Message.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../../../Routes/Routes\";\r\n\r\n\r\ntype MessegePropsType = {\r\n    avatar: string\r\n    myAvatarValue: string\r\n    f: UsersDataType\r\n    messege: string\r\n    addTochedUser:(data:{id:number,name:string})=>void\r\n\r\n\r\n}\r\nexport const Messege =forwardRef<any,MessegePropsType> (({avatar, myAvatarValue, f, messege,addTochedUser},ref) => {\r\n\r\n\r\n    return <NavLink  to={routes.toDialog + f.id} ref={ref} onClick={()=>addTochedUser({id:f.id,name:f.name})} >\r\n        <Row justify={\"space-evenly\"} className={s.messageContainer} >\r\n\r\n            <Col >\r\n                <img className={styleMyPosts.avatar}\r\n                     src={avatar}\r\n                     alt=\"avatar\"\r\n                />\r\n            </Col>\r\n            <Col >\r\n                <Row> {f.name} </Row>\r\n                <Row align={\"middle\"} style={{marginBottom: 10}}>\r\n                    <Col >\r\n                        <Row justify={\"center\"}>\r\n                            <img className={sCommentForm.avatar} src={myAvatarValue} alt=\"avatar\"/>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col >\r\n                        <span className={s.messege}> {messege}</span>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        <Divider style={{margin: 10}}/>\r\n    </NavLink>\r\n})\r\n\r\n","import React, {createRef, useEffect, useRef} from \"react\";\r\n\r\nimport {viewAvatar} from \"../../../utils/ViewAvatar/viewAvatar\";\r\nimport {Messege} from \"./Messege/Messege\";\r\nimport {UsersDataType} from \"../../../Redux/users-reducer\";\r\n\r\n\r\ntype DialogLastMessageType = {\r\n    friends: UsersDataType[],\r\n    addTochedUser: (data: { id: number, name: string }) => void\r\n    myAvatar: string | null | undefined\r\n    messege: string\r\n\r\n}\r\nexport const DialogLastMessage: React.FC<DialogLastMessageType> = ({friends, addTochedUser, myAvatar, messege}) => {\r\n\r\n    const standartPortion = 7\r\n    const [sizePortion, setSizePortion] = React.useState(standartPortion)\r\n    const friendPortion = friends.slice(0, sizePortion)\r\n\r\n    const totalCountFriends = friends.length\r\n\r\n    const lastItem = createRef<Element | null>();\r\n\r\n    const observerLoader = useRef<null | IntersectionObserver>(null);\r\n\r\n    const actionInSight = (entries: IntersectionObserverEntry[]) => {\r\n        if (entries[0].isIntersecting && totalCountFriends / sizePortion > 1) {\r\n            setSizePortion(sizePortion + standartPortion);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (observerLoader.current) {\r\n            observerLoader.current.disconnect()\r\n        }\r\n\r\n        observerLoader.current = new IntersectionObserver(actionInSight);\r\n        if (lastItem.current) observerLoader.current.observe(lastItem.current);\r\n    }, [lastItem]);\r\n    const messeges = friendPortion.map((f, index) => {\r\n        const myAvatarValue = viewAvatar(myAvatar)\r\n        const avatar = viewAvatar(f.photos.small)\r\n        if (index + 1 === friendPortion.length) {\r\n            return <Messege key={f.id} addTochedUser={addTochedUser} avatar={avatar} ref={lastItem}\r\n                            myAvatarValue={myAvatarValue} f={f}\r\n                            messege={messege}/>;\r\n        }\r\n        return <Messege key={f.id} addTochedUser={addTochedUser} avatar={avatar} myAvatarValue={myAvatarValue} f={f}\r\n                        messege={messege}/>;\r\n\r\n    })\r\n    return <>{messeges}</>\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport sProfilePage from \"../Profile/Profile.module.css\";\r\nimport {Col, Row} from \"antd\";\r\nimport {SearchAutoComplite} from \"../common/SearchWithAutocomplite/SearchAutoComplite\";\r\nimport {FriendsList} from \"./FriendsList/FriendsList\";\r\nimport {DialogLastMessage} from \"./DialogLastMessege/DialogLastMessage\";\r\nimport {NavDialogs} from \"./NavDialogs/NavDialogs\";\r\nimport {UsersDataType} from \"../../Redux/users-reducer\";\r\nimport {TouchedUsers} from \"../../Redux/dialogs-reduser\";\r\n\r\ntype DialogsPropsType={\r\n    friends:UsersDataType[]\r\n    myAvatar:string|null|undefined\r\n    tochedUsers:TouchedUsers[]\r\n    addTochedUser:(data: { id: number; name: string; }) => void\r\n    message:string\r\n\r\n    removeTochedUser:( id: number) => void\r\n    followingInProgress:number[]\r\n    changeFollowUnfollow:(user:UsersDataType)=>void\r\n    isOwner:boolean\r\n}\r\nexport const Dialogs: React.FC<DialogsPropsType> = ({\r\n                                                        friends, myAvatar,\r\n                                                        tochedUsers, addTochedUser, message\r\n                                                        , removeTochedUser,followingInProgress,\r\n                                                        changeFollowUnfollow, isOwner\r\n                                                    }) => {\r\n\r\n    console.log('dialogs')\r\n    return (\r\n        <>\r\n\r\n            <Row style={{marginTop: 20}}>\r\n                <Col className=\"gutter-row\" span={15}>\r\n                    <div className={sProfilePage.profileInfoContainer}>\r\n                        <SearchAutoComplite data={friends} placeholder={'Find friends dialiog'}\r\n                                            addTochedUser={addTochedUser}/>\r\n                        <FriendsList followingInProgress={followingInProgress} changeFollowUnfollow={changeFollowUnfollow}\r\n                                     isOwner={isOwner} friends={friends} addTochedUser={addTochedUser}/>\r\n                    </div>\r\n                    <div className={sProfilePage.profileInfoContainer}>\r\n                        <DialogLastMessage friends={friends} addTochedUser={addTochedUser}\r\n                                           myAvatar={myAvatar} messege={message}/>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={9}>\r\n                    <NavDialogs removeTochedUser={removeTochedUser} tochedUsers={tochedUsers}/>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {addTochedUser, removeTochedUser, TouchedUsers,} from \"../../Redux/dialogs-reduser\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {changeFollowUnfollow, getFriend, UsersDataType} from \"../../Redux/users-reducer\";\r\nimport {getUserProfile} from \"../../Redux/profile-reduser\";\r\n\r\nexport class DialogsContainerApi extends React.PureComponent<DialogsPropsType> {\r\n    componentDidMount() {\r\n        if (this.props.profileId !== this.props.myId) {\r\n            this.props.getUserProfile(this.props.myId!)\r\n            this.props.getFriend(true)\r\n        }\r\n\r\n        if (this.props.friends.length === 0) {\r\n            this.props.getFriend(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Dialogs friends={this.props.friends} tochedUsers={this.props.tochedUsers}\r\n                        message={this.props.message} myAvatar={this.props.myAvatar}\r\n                        removeTochedUser={this.props.removeTochedUser}\r\n                        addTochedUser={this.props.addTochedUser}\r\n                        followingInProgress={this.props.followingInProgress}\r\n                        changeFollowUnfollow={this.props.changeFollowUnfollow}\r\n                        isOwner={this.props.myId === this.props.profileId}/>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    tochedUsers: TouchedUsers[]\r\n    friends: UsersDataType[]\r\n    myAvatar: string | null | undefined\r\n    message: string\r\n    profileId:number | undefined\r\n    myId:number | null\r\n    isLoading:boolean\r\n    followingInProgress:number[]\r\n}\r\ntype MapDispatchToPropsType = typeof mapDispatchToProps\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        tochedUsers: state.dialogsPage.touchedUsers,\r\n        friends: state.usersPage.friends,\r\n        myAvatar: state.auth.avatar,\r\n        message: state.dialogsPage.messagesData[state.dialogsPage.messagesData.length - 1].message,\r\n        profileId:state.profilePage.profile?.userId,\r\n        myId:state.auth.id,\r\n        isLoading:state.usersPage.isLoading,\r\n        followingInProgress:state.usersPage.followingInProgress\r\n    }\r\n}\r\nlet mapDispatchToProps = {\r\n    addTochedUser,\r\n    removeTochedUser,\r\n    getFriend,\r\n    getUserProfile,\r\n    changeFollowUnfollow\r\n\r\n\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(DialogsContainerApi)\r\n\r\n"],"names":["Option","Select","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","customizeInput","customizePrefixCls","prefixCls","className","popupClassName","dropdownClassName","children","dataSource","childNodes","toArray","length","isValidElement","_childNodes","_slicedToArray","optionChildren","getInputElement","undefined","map","item","_typeof","React","key","value","optionValue","text","ConfigConsumer","_ref","getPrefixCls","_extends","omit","classNames","mode","RefAutoComplete","PurePanel","genPurePanel","_InternalPanelDoNotUseOrYouWillBeFired","SearchAutoComplite","data","addTochedUser","placeholder","getSearchUsers","options","setOptions","s","onSearch","filter","f","name","toLowerCase","includes","r","avatar","viewAvatar","photos","small","label","style","color","onClick","id","to","align","sCommentForm","src","alt","paddingLeft","onSelect","enterButton","FriendsList","friends","changeFollowUnfollow","followingInProgress","isOwner","sizePortion","setSizePortion","prevSizePortion","setPrevSizePortion","friendPortion","slice","showNextFriendsButton","showPrevFriendsButton","friendsData","SingleUser","unfriend","navigate","routes","user","photo","span","LeftOutlined","fontSize","justify","RightOutlined","Messege","forwardRef","myAvatarValue","messege","styleMyPosts","marginBottom","margin","DialogLastMessage","myAvatar","totalCountFriends","lastItem","createRef","observerLoader","useRef","actionInSight","entries","isIntersecting","useEffect","current","disconnect","IntersectionObserver","observe","messeges","index","Dialogs","tochedUsers","message","removeTochedUser","console","log","marginTop","sProfilePage","NavDialogs","DialogsContainerApi","this","profileId","myId","getUserProfile","getFriend","mapDispatchToProps","DialogsContainer","compose","connect","state","dialogsPage","touchedUsers","usersPage","auth","messagesData","profilePage","profile","userId","isLoading","withAuthRedirect"],"sourceRoot":""}